<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ~/bermudev/blog</title>
    <link>https://bermu.dev/posts/</link>
    <description>Recent content in Posts on ~/bermudev/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Carlos Berm√∫dez</copyright>
    <lastBuildDate>Sun, 24 Dec 2023 13:53:18 +0200</lastBuildDate><atom:link href="https://bermu.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Beyond the Code: My Journey in 2023</title>
      <link>https://bermu.dev/posts/beyond-the-code-my-journey-in-2023/</link>
      <pubDate>Sun, 24 Dec 2023 13:53:18 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/beyond-the-code-my-journey-in-2023/</guid>
      <description>Now that the current year 2023 is coming to an end I think it would be appropriate to make a small comment about my experience this year and my new wishes for next year.
Professional Milestones Professionally I have been able to work on two different projects within the company where I am working, and thanks to this I have been able to acquire knowledge about many technologies that until then were only known to me in theory.</description>
    </item>
    
    <item>
      <title>Installing Fedora on Windows Using WSL</title>
      <link>https://bermu.dev/posts/installing_fedora_on_windows_using_wsl/</link>
      <pubDate>Tue, 28 Nov 2023 19:15:12 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/installing_fedora_on_windows_using_wsl/</guid>
      <description>For the past few weeks, I&amp;rsquo;ve been forced to use Windows (I know, it&amp;rsquo;s a long story) and thus leave behind my Linux development environment. However, for some time now, Windows has offered the opportunity to integrate Linux systems into the desktop more or less natively through WSL (Windows Subsystem for Linux).
The thing is, although major distributions like Ubuntu, Debian, OpenSuse, or even Kali Linux offer support, not all distributions make it easy to use this feature.</description>
    </item>
    
    <item>
      <title>Using Pyenv to Manage Different Python Versions</title>
      <link>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</link>
      <pubDate>Thu, 19 Oct 2023 11:41:53 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</guid>
      <description>When working with different projects it is common to have different versions of the same programming language and dependencies for each one of them, so if we had a single installation or global version, this could give constant conflict between different projects.
To fix that we can use tools like pyenv and virtual environments. What these tools do is to isolate different versions of python and different installations (environments) of each of these versions.</description>
    </item>
    
    <item>
      <title>Microservices Development with DevContainer in VSCode</title>
      <link>https://bermu.dev/posts/microservices_development_with_devcontainer_in_vscode/</link>
      <pubDate>Fri, 21 Jul 2023 16:28:17 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/microservices_development_with_devcontainer_in_vscode/</guid>
      <description>I have recently started working on a new project with microservices and I have come across one of the tools that has impressed me the most in this time. This tool is the DevContainer extension in Visual Studio Code (VSCode), and now I will explain why I think it is indispensable for working in microservices development.
What is DevContainer? DevContainer is an extension provided by VSCode that allows developers to define and manage development environments within a container.</description>
    </item>
    
    <item>
      <title>A quick overview of Test Driven Development</title>
      <link>https://bermu.dev/posts/a_quick_overview_of_test_driven_development/</link>
      <pubDate>Sat, 17 Jun 2023 23:18:57 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/a_quick_overview_of_test_driven_development/</guid>
      <description>Test-Driven Development (TDD) is a software development practice where developers write tests before writing the implementation code. Yes, I know it sounds a little crazy, but keep reading!
What is TDD all about? The TDD cycle is really simple and it usually consists of three main steps:
Write a failing test: First, you write a test that specifies the desired behavior of the code you are about to write. This test is expected to fail initially, as the code to fulfill this behavior has not been implemented yet.</description>
    </item>
    
    <item>
      <title>Pre-commit Hooks in Python</title>
      <link>https://bermu.dev/posts/pre-commit_hooks_in_python/</link>
      <pubDate>Wed, 10 May 2023 19:32:59 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/pre-commit_hooks_in_python/</guid>
      <description>Last month I was talking about code formatters, tools that help to unify styles in our code, making it cleaner, unified, and helping when working in a team.
Now, I&amp;rsquo;m going to talk about how to integrate those tools into our workflow, so that we make sure we always use them. For this we will use what is known as Pre-commit hooks.
What are Pre-commit Hooks? Pre-commit hooks are scripts or tools that run automatically before each commit is made in a version control system, such as Git.</description>
    </item>
    
    <item>
      <title>Introducing code formatters: Black and YAPF</title>
      <link>https://bermu.dev/posts/introducing_code_formatters_black_and_yapf/</link>
      <pubDate>Tue, 18 Apr 2023 18:42:10 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/introducing_code_formatters_black_and_yapf/</guid>
      <description>Imagine you are in a development group where you work on common projects, you do tasks on the same files and everyone has their own way of doing things, their own style preference, etc. The amount of noise that is generated in PRs is incredible.
Thankfully, there are tools available that can automatically format our code according to a defined style guide. I will talk about two of the most popular code formatters for Python: Black and YAPF.</description>
    </item>
    
    <item>
      <title>Ruff: A Fast Rust-based Python Linter</title>
      <link>https://bermu.dev/posts/ruff-a-fast-rust-based-python-linter/</link>
      <pubDate>Sun, 19 Mar 2023 14:46:02 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/ruff-a-fast-rust-based-python-linter/</guid>
      <description>In recent weeks there has been considerable talk in the Python community about a new linter that may come to replace the already more than consolidated Flake8 or Pylint. This new linter is called Ruff.
What is Ruff? Ruff is a linting tool for Python, that like all other linters, analyzes your code for potential errors, style violations, and other issues that could impact the quality and readability of your code.</description>
    </item>
    
    <item>
      <title>My Personal Setup for the Terminal</title>
      <link>https://bermu.dev/posts/my-personal-setup-for-the-terminal/</link>
      <pubDate>Tue, 07 Mar 2023 16:59:02 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/my-personal-setup-for-the-terminal/</guid>
      <description>Hello everyone! It&amp;rsquo;s been a busy few weeks, I&amp;rsquo;m studying a lot about Machine Learning and I don&amp;rsquo;t have too much time to write or share my progress. However, I had to set up a new development environment and I thought, why not share a bit of my setup?
So here&amp;rsquo;s how to choose a shell, how to set up my favorite prompt, font and some personal aliases I commonly use!</description>
    </item>
    
    <item>
      <title>Building a Dog Shelter API with Flask and Python</title>
      <link>https://bermu.dev/posts/building-a-dog-shelter-api-with-flask-and-python/</link>
      <pubDate>Sat, 18 Feb 2023 16:21:22 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/building-a-dog-shelter-api-with-flask-and-python/</guid>
      <description>One of the first projects I did when I started in the world of backend development was an API for a dog shelter using Django REST Framework, it is one of my first projects and although I remember it fondly I have learned a lot since then.
So I thought, why not try doing something similar using another framework? This way I can take the opportunity to dive more into API development, learn about a different framework and revisit an old project that I&amp;rsquo;m so close to.</description>
    </item>
    
    <item>
      <title>Pandas for Data Analisys</title>
      <link>https://bermu.dev/posts/pandas-for-data-analisys/</link>
      <pubDate>Sat, 11 Feb 2023 12:06:02 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/pandas-for-data-analisys/</guid>
      <description>In my professional career I have had to work with large amounts of data and I have been able to learn how to use some analysis tools, one of them is Pandas. So, why don&amp;rsquo;t we take a look at what Pandas is and what it offers us?
What is Pandas? Pandas is a library for data analysis and data manipulation in Python. It provides data structures and functions needed to work on structured data seamlessly.</description>
    </item>
    
    <item>
      <title>Understanding NoSQL databases</title>
      <link>https://bermu.dev/posts/understanding-nosql-databases/</link>
      <pubDate>Sat, 28 Jan 2023 22:33:32 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/understanding-nosql-databases/</guid>
      <description>The first thing I remember when I started to understand databases is that I thought there was only one type of non-relational database. Wrong! It&amp;rsquo;s important to understand that NoSQL databases are not a single type of database, but rather a category that encompasses several different types of databases.
Some of the most popular types of NoSQL databases include:
Document databases: These databases store data in the form of documents, such as JSON or XML.</description>
    </item>
    
    <item>
      <title>Setting up backups with Restic</title>
      <link>https://bermu.dev/posts/setting-up-backups-with-restic/</link>
      <pubDate>Fri, 20 Jan 2023 17:50:46 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/setting-up-backups-with-restic/</guid>
      <description>As a software developer, data protection is a crucial aspect of our daily work. The ability to recover from data loss or hardware failures is a must-have for any serious software development project. One of the best ways to ensure data protection is by using backup software like Restic. In this article, I will show you how to set up backups with Restic, and why it&amp;rsquo;s a great choice for your data protection needs.</description>
    </item>
    
    <item>
      <title>Added Utterances comments for the articles</title>
      <link>https://bermu.dev/posts/added-utterances-comments/</link>
      <pubDate>Sun, 15 Jan 2023 19:08:16 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/added-utterances-comments/</guid>
      <description>I am excited to announce that comments have been enabled on the articles! For me, one of the main features I like most about blogs is being able to comment and share knowledge. After studying several options I have decided that Utterances is the best option and the one I like the most for the cause.
Utterances is a lightweight and fast commenting system that integrates with GitHub Issues. I believe that Utterances is a great choice for the website and want to share why I consider it better than other commenting systems like Disqus and Cactus Comments.</description>
    </item>
    
    <item>
      <title>Welcome to my software development blog</title>
      <link>https://bermu.dev/posts/my-first-post/</link>
      <pubDate>Fri, 13 Jan 2023 23:37:58 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/my-first-post/</guid>
      <description>Hello and welcome! I have always been passionate about technology and software development, and I have decided to start this blog as a personal project for the new year.
Why writing a blog? As a software developer, I know how important it is to continuously learn and grow. I believe that blogging is a great way to do that as it allows me to reflect on what I have learned, share my knowledge with others, and learn from others in the community.</description>
    </item>
    
  </channel>
</rss>
