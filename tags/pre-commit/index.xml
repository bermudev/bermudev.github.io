<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pre-commit on ~/bermudev/blog</title>
    <link>https://bermu.dev/tags/pre-commit/</link>
    <description>Recent content in pre-commit on ~/bermudev/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Carlos Berm√∫dez</copyright>
    <lastBuildDate>Wed, 10 May 2023 19:32:59 +0200</lastBuildDate><atom:link href="https://bermu.dev/tags/pre-commit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pre-commit Hooks in Python</title>
      <link>https://bermu.dev/posts/pre-commit_hooks_in_python/</link>
      <pubDate>Wed, 10 May 2023 19:32:59 +0200</pubDate>
      
      <guid>https://bermu.dev/posts/pre-commit_hooks_in_python/</guid>
      <description>Last month I was talking about code formatters, tools that help to unify styles in our code, making it cleaner, unified, and helping when working in a team.
Now, I&amp;rsquo;m going to talk about how to integrate those tools into our workflow, so that we make sure we always use them. For this we will use what is known as Pre-commit hooks.
What are Pre-commit Hooks? Pre-commit hooks are scripts or tools that run automatically before each commit is made in a version control system, such as Git.</description>
    </item>
    
  </channel>
</rss>
