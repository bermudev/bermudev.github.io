<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development environment on ~/bermudev/blog</title>
    <link>https://bermu.dev/tags/development-environment/</link>
    <description>Recent content in development environment on ~/bermudev/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Carlos Berm√∫dez</copyright>
    <lastBuildDate>Tue, 28 Nov 2023 19:15:12 +0100</lastBuildDate><atom:link href="https://bermu.dev/tags/development-environment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing Fedora on Windows Using WSL</title>
      <link>https://bermu.dev/posts/installing_fedora_on_windows_using_wsl/</link>
      <pubDate>Tue, 28 Nov 2023 19:15:12 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/installing_fedora_on_windows_using_wsl/</guid>
      <description>For the past few weeks, I&amp;rsquo;ve been forced to use Windows (I know, it&amp;rsquo;s a long story) and thus leave behind my Linux development environment. However, for some time now, Windows has offered the opportunity to integrate Linux systems into the desktop more or less natively through WSL (Windows Subsystem for Linux).
The thing is, although major distributions like Ubuntu, Debian, OpenSuse, or even Kali Linux offer support, not all distributions make it easy to use this feature.</description>
    </item>
    
    <item>
      <title>Using Pyenv to Manage Different Python Versions</title>
      <link>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</link>
      <pubDate>Thu, 19 Oct 2023 11:41:53 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</guid>
      <description>When working with different projects it is common to have different versions of the same programming language and dependencies for each one of them, so if we had a single installation or global version, this could give constant conflict between different projects.
To fix that we can use tools like pyenv and virtual environments. What these tools do is to isolate different versions of python and different installations (environments) of each of these versions.</description>
    </item>
    
  </channel>
</rss>
