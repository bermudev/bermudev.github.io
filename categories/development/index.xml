<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on ~/bermudev/blog</title>
    <link>https://bermu.dev/categories/development/</link>
    <description>Recent content in development on ~/bermudev/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Carlos Berm√∫dez</copyright>
    <lastBuildDate>Thu, 19 Oct 2023 11:41:53 +0100</lastBuildDate><atom:link href="https://bermu.dev/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Pyenv to Manage Different Python Versions</title>
      <link>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</link>
      <pubDate>Thu, 19 Oct 2023 11:41:53 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/using_pyenv_to_manage_different_python_versions/</guid>
      <description>When working with different projects it is common to have different versions of the same programming language and dependencies for each one of them, so if we had a single installation or global version, this could give constant conflict between different projects.
To fix that we can use tools like pyenv and virtual environments. What these tools do is to isolate different versions of python and different installations (environments) of each of these versions.</description>
    </item>
    
    <item>
      <title>Building a Dog Shelter API with Flask and Python</title>
      <link>https://bermu.dev/posts/building-a-dog-shelter-api-with-flask-and-python/</link>
      <pubDate>Sat, 18 Feb 2023 16:21:22 +0100</pubDate>
      
      <guid>https://bermu.dev/posts/building-a-dog-shelter-api-with-flask-and-python/</guid>
      <description>One of the first projects I did when I started in the world of backend development was an API for a dog shelter using Django REST Framework, it is one of my first projects and although I remember it fondly I have learned a lot since then.
So I thought, why not try doing something similar using another framework? This way I can take the opportunity to dive more into API development, learn about a different framework and revisit an old project that I&amp;rsquo;m so close to.</description>
    </item>
    
  </channel>
</rss>
